use cxdb;

select 
	last_scan.ProjectId, last_scan.scanid, tse.loc, tse.failedloc, datediff( second, ts.enginestartedon, ts.enginefinishedon ) as 'scan seconds',
	(select count(*) from pathresults pr left join queryversion qv on qv.QueryVersionCode = pr.QueryVersionCode left join querygroup qg on qg.packageid=qv.packageid where pr.resultid = ts.resultid and qg.languagename ='CSharp') as 'CSharp findings',(select count(*) from pathresults pr left join queryversion qv on qv.QueryVersionCode = pr.QueryVersionCode left join querygroup qg on qg.packageid=qv.packageid where pr.resultid = ts.resultid and qg.languagename ='Java') as 'Java findings',(select count(*) from pathresults pr left join queryversion qv on qv.QueryVersionCode = pr.QueryVersionCode left join querygroup qg on qg.packageid=qv.packageid where pr.resultid = ts.resultid and qg.languagename ='CPP') as 'CPP findings',(select count(*) from pathresults pr left join queryversion qv on qv.QueryVersionCode = pr.QueryVersionCode left join querygroup qg on qg.packageid=qv.packageid where pr.resultid = ts.resultid and qg.languagename ='JavaScript') as 'JavaScript findings',(select count(*) from pathresults pr left join queryversion qv on qv.QueryVersionCode = pr.QueryVersionCode left join querygroup qg on qg.packageid=qv.packageid where pr.resultid = ts.resultid and qg.languagename ='Apex') as 'Apex findings',(select count(*) from pathresults pr left join queryversion qv on qv.QueryVersionCode = pr.QueryVersionCode left join querygroup qg on qg.packageid=qv.packageid where pr.resultid = ts.resultid and qg.languagename ='VbNet') as 'VbNet findings',(select count(*) from pathresults pr left join queryversion qv on qv.QueryVersionCode = pr.QueryVersionCode left join querygroup qg on qg.packageid=qv.packageid where pr.resultid = ts.resultid and qg.languagename ='VbScript') as 'VbScript findings',(select count(*) from pathresults pr left join queryversion qv on qv.QueryVersionCode = pr.QueryVersionCode left join querygroup qg on qg.packageid=qv.packageid where pr.resultid = ts.resultid and qg.languagename ='ASP') as 'ASP findings',(select count(*) from pathresults pr left join queryversion qv on qv.QueryVersionCode = pr.QueryVersionCode left join querygroup qg on qg.packageid=qv.packageid where pr.resultid = ts.resultid and qg.languagename ='VB6') as 'VB6 findings',(select count(*) from pathresults pr left join queryversion qv on qv.QueryVersionCode = pr.QueryVersionCode left join querygroup qg on qg.packageid=qv.packageid where pr.resultid = ts.resultid and qg.languagename ='PHP') as 'PHP findings',(select count(*) from pathresults pr left join queryversion qv on qv.QueryVersionCode = pr.QueryVersionCode left join querygroup qg on qg.packageid=qv.packageid where pr.resultid = ts.resultid and qg.languagename ='Ruby') as 'Ruby findings',(select count(*) from pathresults pr left join queryversion qv on qv.QueryVersionCode = pr.QueryVersionCode left join querygroup qg on qg.packageid=qv.packageid where pr.resultid = ts.resultid and qg.languagename ='Perl') as 'Perl findings',(select count(*) from pathresults pr left join queryversion qv on qv.QueryVersionCode = pr.QueryVersionCode left join querygroup qg on qg.packageid=qv.packageid where pr.resultid = ts.resultid and qg.languagename ='Objc') as 'Objc findings',(select count(*) from pathresults pr left join queryversion qv on qv.QueryVersionCode = pr.QueryVersionCode left join querygroup qg on qg.packageid=qv.packageid where pr.resultid = ts.resultid and qg.languagename ='PLSQL') as 'PLSQL findings',(select count(*) from pathresults pr left join queryversion qv on qv.QueryVersionCode = pr.QueryVersionCode left join querygroup qg on qg.packageid=qv.packageid where pr.resultid = ts.resultid and qg.languagename ='Python') as 'Python findings',(select count(*) from pathresults pr left join queryversion qv on qv.QueryVersionCode = pr.QueryVersionCode left join querygroup qg on qg.packageid=qv.packageid where pr.resultid = ts.resultid and qg.languagename ='Groovy') as 'Groovy findings',(select count(*) from pathresults pr left join queryversion qv on qv.QueryVersionCode = pr.QueryVersionCode left join querygroup qg on qg.packageid=qv.packageid where pr.resultid = ts.resultid and qg.languagename ='Scala') as 'Scala findings',(select count(*) from pathresults pr left join queryversion qv on qv.QueryVersionCode = pr.QueryVersionCode left join querygroup qg on qg.packageid=qv.packageid where pr.resultid = ts.resultid and qg.languagename ='Go') as 'Go findings',(select count(*) from pathresults pr left join queryversion qv on qv.QueryVersionCode = pr.QueryVersionCode left join querygroup qg on qg.packageid=qv.packageid where pr.resultid = ts.resultid and qg.languagename ='Typescript') as 'Typescript findings',(select count(*) from pathresults pr left join queryversion qv on qv.QueryVersionCode = pr.QueryVersionCode left join querygroup qg on qg.packageid=qv.packageid where pr.resultid = ts.resultid and qg.languagename ='Common') as 'Common findings'
from
	(
		select
			ts.projectid, max(ts.id) as scanid
		from 
			taskscans ts  with(nolock)
		where
			ts.enginestartedon > dateadd( month, -6, getdate() )
			and ts.is_Incremental = 0
			and not ts.enginefinishedon is null
		group by
			ts.projectid
	) last_scan
left join
	taskscans ts with(nolock) on ts.id = last_scan.scanid
left join
	TaskScanEnvironment tse with(nolock) on tse.scanid = last_scan.scanid
order by
	projectid, scanid